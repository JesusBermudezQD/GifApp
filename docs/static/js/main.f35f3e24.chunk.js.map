{"version":3,"sources":["componentes/AddCategoria.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","info","setInfo","onSubmit","e","preventDefault","trim","length","cate","type","onChange","target","value","getGif","categoria","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","GiftExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"6LAiCeA,EA9BM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAClBC,mBAAS,IADS,mBACnCC,EADmC,KAC7BC,EAD6B,KAe1C,OACE,mCACE,sBAAMC,SAVW,SAACC,GACpBA,EAAEC,iBACEJ,EAAKK,OAAOC,OAAS,GACvBR,GAAc,SAAAS,GAAI,OAAKP,EAAKK,QAAV,mBAAqBE,QAOvC,SACE,uBAAOC,KAAK,OAAOC,SAfC,SAACN,GACzBF,EAAQE,EAAEO,OAAOC,e,+BCPRC,EAAM,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,iDACmCC,UAAUH,GAD7C,+DAIAI,MAAMF,GAJN,cAIXG,EAJW,gBAMGA,EAAIC,OANP,uBAMVC,EANU,EAMVA,KAEFC,EAAKD,EAAKE,KAAI,SAAAC,GAChB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAZtB,kBAgBXM,GAhBW,4CAAF,sDCENO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,yCAAf,UACI,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAI,SCFlBC,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECHd,SAACA,GAAe,IAAD,EACbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAiBvC,OAXAC,qBAAU,WACNxB,EAAOC,GACFwB,MAAK,SAAAC,GAAI,OACNH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,IAEIC,EDZ6BK,CAAa1B,GAAnC2B,EAFwB,EAE9BpB,KAAgBa,EAFc,EAEdA,QACxB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,oCAAb,sBAEZ,qBAAKA,UAAU,YAAf,SACKW,EAASlB,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEK5CiB,EAjBO,WAAO,IAAD,EACU1C,mBAAS,IADnB,mBACnB2C,EADmB,KACP5C,EADO,KAG1B,OACE,gCACE,+CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,6BACG4C,EAAWpB,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAASA,UAAWA,GAAgBA,Y,MCTrD8B,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.f35f3e24.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst AddCategoria = ({ setCategorias }) => {\n  const [info, setInfo] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInfo(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (info.trim().length > 2) {\n      setCategorias(cate => [info.trim(), ...cate])\n    }\n\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" onChange={handleInputChange} />\n      </form>\n    </>\n  );\n};\n\nAddCategoria.propTypes = {\n  setCategorias: PropTypes.func.isRequired\n}\n\n\n\nexport default AddCategoria;\n","export const getGif= async(categoria)=>{\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=iN4JdECQA0iMEsybHn3AELi5B3xLPuad`\n\n  \n    const res= await fetch(url);\n\n    const {data}= await res.json();\n\n   const gifs=data.map(img=>{\n       return{\n           id:img.id,\n           title:img.title,\n           url:img.images.downsized_medium.url\n       }\n   })\n\n   return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <p>{title}</p>\n            <img src={url} alt=\"\" />\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ categoria }) => {\n\n    const { data: imagenes, loading } = useFetchGifs(categoria);\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\n\n            {loading && <p className=\"animate__animated animate__bounce\">Cargando</p>}\n\n            <div className=\"card-grid\">\n                {imagenes.map(img => <GifGridItem key={img.id} {...img} />)}\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGif } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (categoria) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGif(categoria)\n            .then(imgs =>\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n\n            )\n    }, [])\n\n    return state;\n}\n\n","import React, { useState } from \"react\";\nimport AddCategoria from \"./componentes/AddCategoria\";\nimport { GifGrid } from \"./componentes/GifGrid\";\n\nconst GiftExpertApp = () => {\n  const [categorias, setCategorias] = useState([]);\n\n  return (\n    <div>\n      <h2>GiftExpertApp</h2>\n      <AddCategoria setCategorias={setCategorias} />\n      <hr />\n      <ul>\n        {categorias.map((categoria) => {\n          return <GifGrid categoria={categoria} key={categoria}/>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default GiftExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GiftExpertApp from \"./GiftExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GiftExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}